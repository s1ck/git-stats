name: checks

on: [push, pull_request, workflow_dispatch]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --all-targets --verbose

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-targets

  test:
    name: Tests
    needs: [check, fmt, clippy]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-targets --verbose

  release:
    name: Release
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macOS-latest
            target: x86_64-apple-darwin
            upx_args: --best
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            upx_args: --best --lzma
    steps:
      - name: Checkout
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/checkout@master
      - name: Toolchain
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          default: true
      - name: Cargo
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Compress binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upx-action@v2
        with:
          file: target/${{ matrix.target }}/release/git-stats
          args: ${{ matrix.upx_args }}
          strip: true
      - name: Packaging binary
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf git-stats-${{ matrix.target }}.tar.gz git-stats
          shasum -a 256 git-stats-${{ matrix.target }}.tar.gz > git-stats-${{ matrix.target }}.sha256
      - name: Releasing assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/git-stats-${{ matrix.target }}.tar.gz
            target/${{ matrix.target }}/release/git-stats-${{ matrix.target }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
